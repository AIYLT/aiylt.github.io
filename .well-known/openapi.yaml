openapi: 3.1.0
info:
  title: Institutional Day Trading AI - o3-2025-04-16
  version: 2.0.0
  description: |
    **📈 机构级日内交易 AI 系统 - 基于 OpenAI o3-2025-04-16**
    
    专为高频股票交易、实时市场分析和风险管理设计的 AI 交易助手。
    
    **🎯 交易能力**:
    - 实时股票价格分析与预测
    - 技术指标计算与解读
    - 风险评估与仓位管理
    - 市场情绪分析
    - 高频交易策略生成
    - 实时新闻影响分析
    
    **🔧 模型配置**:
    - Context Window: 200,000 tokens
    - Max Output: 100,000 tokens
    - Reasoning: HIGH (最高推理精度)
    - Temperature: 0.1 (低随机性，高精确度)
    - Response Time: 优化为低延迟
    - BYOK Required: 机构级访问权限
    
    **⚡️ 交易优化**:
    - 确定性决策输出
    - 结构化交易信号
    - 实时风险控制
    - 多资产组合分析

servers:
  - url: https://api.openai.com/v1
    description: OpenAI Official API (Primary)
  - url: https://openrouter.ai/api/v1
    description: OpenRouter API (Backup with BYOK)

paths:
  /chat/completions:
    post:
      operationId: createTradingAnalysis
      summary: 🚀 机构级股票交易分析与决策
      description: |
        专为日内交易优化的 o3-2025-04-16 模型调用接口。
        
        **🎯 交易特性**:
        - 超低延迟响应（推理优化）
        - 确定性交易决策
        - 结构化输出格式
        - 实时风险评估
        - 多维度市场分析
        
        **📊 支持分析类型**:
        - 技术面分析 (TA)
        - 基本面分析 (FA) 
        - 量化分析 (QA)
        - 情绪分析 (SA)
        - 风险管理 (RM)
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TradingAnalysisRequest"
      responses:
        "200":
          description: 交易分析成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TradingAnalysisResponse"
        "206":
          description: 流式交易分析
          content:
            text/event-stream:
              schema:
                type: string
                description: 实时交易信号流

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Bearer YOUR_INSTITUTIONAL_API_KEY

  schemas:
    TradingAnalysisRequest:
      type: object
      required:
        - model
        - messages
      properties:
        model:
          type: string
          enum:
            - o3-2025-04-16
            - openai/o3-2025-04-16
          default: o3-2025-04-16
          description: 🎯 强制使用 o3-2025-04-16 交易分析模型
        
        messages:
          type: array
          items:
            $ref: "#/components/schemas/TradingMessage"
          description: 交易分析对话数组
          minItems: 1
        
        # 🔥 交易优化参数
        reasoning_effort:
          type: string
          enum:
            - high
          default: high
          description: |
            🧠 交易推理等级 (强制 HIGH):
            - high: 最大推理深度，确保交易决策准确性
        
        temperature:
          type: number
          minimum: 0
          maximum: 0.2
          default: 0.1
          description: 🎯 极低温度确保交易决策确定性和可重复性
        
        top_p:
          type: number
          minimum: 0.8
          maximum: 0.95
          default: 0.9
          description: 🎪 核采样控制，平衡精确性与适度灵活性
        
        max_tokens:
          type: integer
          minimum: 500
          maximum: 8000
          default: 4000
          description: 📊 交易分析报告长度控制
        
        max_completion_tokens:
          type: integer
          minimum: 500
          maximum: 10000
          default: 5000
          description: 🧮 包含推理token的完整分析长度
        
        n:
          type: integer
          minimum: 1
          maximum: 1
          default: 1
          description: ⚡️ 单一确定性输出（交易决策不允许多选择）
        
        stream:
          type: boolean
          default: true
          description: 📡 默认启用流式输出以获得实时交易信号
        
        stop:
          type: array
          items:
            type: string
          default: ["TRADE_END", "ANALYSIS_COMPLETE", "RISK_ALERT"]
          maxItems: 4
          description: 🛑 交易分析停止信号
        
        presence_penalty:
          type: number
          minimum: 0
          maximum: 0.3
          default: 0.1
          description: 📈 轻微鼓励多维度分析
        
        frequency_penalty:
          type: number
          minimum: 0
          maximum: 0.5
          default: 0.2
          description: 🔄 避免重复分析模式
        
        logit_bias:
          type: object
          additionalProperties:
            type: number
            minimum: -50
            maximum: 50
          description: 📊 交易术语偏置设置
          example:
            "buy": 5
            "sell": 5
            "hold": 5
            "risk": 10
        
        seed:
          type: integer
          description: 🌱 确保相同市场条件下决策可重现
        
        # 🛠️ 交易工具配置
        tools:
          type: array
          items:
            $ref: "#/components/schemas/TradingTool"
          maxItems: 20
          description: 📊 交易分析工具集合
        
        tool_choice:
          type: string
          enum:
            - auto
            - required
          default: auto
          description: 🤖 自动选择最佳交易分析工具
        
        parallel_tool_calls:
          type: boolean
          default: true
          description: ⚡️ 并行执行多个交易分析工具
        
        # 📋 结构化交易输出
        response_format:
          oneOf:
            - $ref: "#/components/schemas/TradingJsonSchema"
            - $ref: "#/components/schemas/ResponseFormatJsonObject"
          default:
            type: json_schema
            json_schema:
              name: trading_analysis
              strict: true
          description: 📊 强制结构化交易分析输出
        
        # 👤 交易员标识
        user:
          type: string
          pattern: "^trader_[a-zA-Z0-9_]{1,32}$"
          description: 👤 交易员唯一标识符

    TradingMessage:
      type: object
      required:
        - role
      properties:
        role:
          type: string
          enum:
            - system
            - user
            - assistant
            - tool
          description: 💬 消息角色
        
        content:
          oneOf:
            - type: string
            - type: array
              items:
                $ref: "#/components/schemas/TradingContentPart"
          description: 📊 交易信息内容
        
        name:
          type: string
          pattern: "^[a-zA-Z0-9_-]{1,64}$"
          description: 🏷️ 交易员或系统名称
        
        tool_calls:
          type: array
          items:
            $ref: "#/components/schemas/TradingToolCall"
          description: 🔧 交易工具调用记录

    TradingContentPart:
      oneOf:
        - $ref: "#/components/schemas/TextContentPart"
        - $ref: "#/components/schemas/ChartContentPart"

    TextContentPart:
      type: object
      required:
        - type
        - text
      properties:
        type:
          type: string
          enum:
            - text
        text:
          type: string
          description: 📝 交易分析文本

    ChartContentPart:
      type: object
      required:
        - type
        - image_url
      properties:
        type:
          type: string
          enum:
            - image_url
        image_url:
          type: object
          required:
            - url
          properties:
            url:
              type: string
              format: uri
              description: 📈 股票图表或技术分析图像URL
            detail:
              type: string
              enum:
                - high
              default: high
              description: 🔍 强制高精度图表分析

    TradingTool:
      type: object
      required:
        - type
        - function
      properties:
        type:
          type: string
          enum:
            - function
        function:
          $ref: "#/components/schemas/TradingFunction"

    TradingFunction:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          enum:
            - technical_analysis
            - risk_assessment
            - market_sentiment
            - price_prediction
            - portfolio_optimization
            - news_impact_analysis
          description: 📊 预定义交易分析函数
        description:
          type: string
          description: 📋 函数功能描述
        parameters:
          type: object
          description: 🔧 JSON Schema 格式的参数定义
        strict:
          type: boolean
          default: true
          description: 🎯 交易分析启用严格模式

    TradingToolCall:
      type: object
      required:
        - id
        - type
        - function
      properties:
        id:
          type: string
          description: 🆔 工具调用唯一ID
        type:
          type: string
          enum:
            - function
        function:
          type: object
          required:
            - name
            - arguments
          properties:
            name:
              type: string
              description: 📊 调用的交易函数名
            arguments:
              type: string
              description: 🔧 JSON格式的函数参数

    TradingJsonSchema:
      type: object
      required:
        - type
        - json_schema
      properties:
        type:
          type: string
          enum:
            - json_schema
        json_schema:
          type: object
          required:
            - name
            - schema
          properties:
            name:
              type: string
              enum:
                - trading_analysis
                - risk_report
                - trading_signal
              description: 📊 交易分析类型
            strict:
              type: boolean
              default: true
              description: 🎯 严格模式确保输出格式一致性
            schema:
              type: object
              description: 📋 交易分析结构定义
              example:
                type: object
                properties:
                  analysis_type:
                    type: string
                    enum: ["BUY", "SELL", "HOLD"]
                  confidence_score:
                    type: number
                    minimum: 0
                    maximum: 100
                  risk_level:
                    type: string
                    enum: ["LOW", "MEDIUM", "HIGH"]
                  price_target:
                    type: number
                  stop_loss:
                    type: number
                  reasoning:
                    type: string

    ResponseFormatJsonObject:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - json_object

    TradingAnalysisResponse:
      type: object
      required:
        - id
        - object
        - created
        - model
        - choices
        - usage
      properties:
        id:
          type: string
          description: 🆔 交易分析响应ID
        object:
          type: string
          enum:
            - chat.completion
        created:
          type: integer
          description: ⏰ 分析生成时间戳
        model:
          type: string
          enum:
            - o3-2025-04-16
          description: 🎯 确认使用的交易分析模型
        choices:
          type: array
          items:
            $ref: "#/components/schemas/TradingChoice"
          description: 📊 交易分析结果
        usage:
          $ref: "#/components/schemas/TradingUsage"
        system_fingerprint:
          type: string
          description: 🖋️ 系统指纹标识

    TradingChoice:
      type: object
      required:
        - index
        - message
        - finish_reason
      properties:
        index:
          type: integer
          description: 📊 分析选择索引
        message:
          $ref: "#/components/schemas/TradingMessage"
        finish_reason:
          type: string
          enum:
            - stop
            - length
            - tool_calls
            - content_filter
          description: 🏁 分析完成原因

    TradingUsage:
      type: object
      required:
        - prompt_tokens
        - completion_tokens
        - total_tokens
      properties:
        prompt_tokens:
          type: integer
          description: 📥 输入token数量
        completion_tokens:
          type: integer
          description: 📤 分析输出token数量
        total_tokens:
          type: integer
          description: 📊 总token使用量
        completion_tokens_details:
          type: object
          properties:
            reasoning_tokens:
              type: integer
              description: 🧠 交易推理token数量（高精度分析）