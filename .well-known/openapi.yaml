openapi: 3.1.0
info:
  title: OpenAI o3-2025-04-16 API for Stock Analysis
  version: 1.0.0
  description: |
    **Official OpenAI o3-2025-04-16 Chat Completions API**
    
    专为股票分析优化的参数配置，基于官方 OpenAI API 规范。
    
    **🎯 股票分析优化**:
    - Temperature: 0.1 (确定性分析)
    - Reasoning Effort: HIGH (深度推理)
    - Max Tokens: 4000 (详细分析)
    - Stream: false (避免验证问题)
    
    **📊 核心能力**:
    - 实时股票价格分析
    - 技术指标计算
    - 风险评估与建议
    - 市场趋势预测
    
    **🔧 模型规格**:
    - Context Window: 200,000 tokens
    - Max Output: 100,000 tokens
    - Knowledge Cutoff: May 31, 2024
    - Multimodal: Text + Images

servers:
  - url: https://api.openai.com/v1
    description: OpenAI Official API
  - url: https://openrouter.ai/api/v1
    description: OpenRouter API (BYOK Required)

paths:
  /chat/completions:
    post:
      operationId: createChatCompletion
      summary: Create chat completion
      description: |
        Creates a completion for the chat message with o3-2025-04-16 model.
        Optimized for stock market analysis with precise reasoning.
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateChatCompletionRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateChatCompletionResponse"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: "Bearer YOUR_API_KEY"

  schemas:
    CreateChatCompletionRequest:
      type: object
      required:
        - model
        - messages
      properties:
        model:
          type: string
          enum:
            - o3
            - o3-2025-04-16
            - openai/o3
            - openai/o3-2025-04-16
          default: o3-2025-04-16
          description: ID of the model to use
        
        messages:
          type: array
          items:
            $ref: "#/components/schemas/ChatCompletionRequestMessage"
          description: A list of messages comprising the conversation so far
          minItems: 1
          maxItems: 1000
        
        reasoning_effort:
          type: string
          enum:
            - low
            - medium
            - high
          default: high
          description: |
            How much effort the model should put into reasoning.
            Stock analysis default: HIGH for maximum accuracy
        
        temperature:
          type: number
          minimum: 0
          maximum: 2
          default: 0.1
          description: |
            What sampling temperature to use, between 0 and 2.
            Stock analysis default: 0.1 for deterministic analysis
        
        top_p:
          type: number
          minimum: 0
          maximum: 1
          default: 0.9
          description: |
            An alternative to sampling with temperature, called nucleus sampling
        
        n:
          type: integer
          minimum: 1
          maximum: 128
          default: 1
          description: How many chat completion choices to generate for each input message
        
        stream:
          type: boolean
          default: false
          description: |
            If set, partial message deltas will be sent.
            Note: Streaming requires organization verification for o3-2025-04-16
        
        stop:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
              maxItems: 4
          description: Up to 4 sequences where the API will stop generating further tokens
        
        max_tokens:
          type: integer
          minimum: 1
          maximum: 100000
          default: 4000
          description: |
            The maximum number of tokens to generate in the chat completion.
            Stock analysis default: 4000 for detailed reports
        
        max_completion_tokens:
          type: integer
          minimum: 1
          maximum: 100000
          description: |
            An upper bound for the number of tokens that can be generated for a completion
        
        presence_penalty:
          type: number
          minimum: -2
          maximum: 2
          default: 0.1
          description: |
            Number between -2.0 and 2.0. Positive values penalize new tokens
        
        frequency_penalty:
          type: number
          minimum: -2
          maximum: 2
          default: 0.2
          description: |
            Number between -2.0 and 2.0. Positive values penalize new tokens
        
        logit_bias:
          type: object
          additionalProperties:
            type: number
            minimum: -100
            maximum: 100
          description: |
            Modify the likelihood of specified tokens appearing in the completion
        
        logprobs:
          type: boolean
          default: false
          description: Whether to return log probabilities of the output tokens or not
        
        top_logprobs:
          type: integer
          minimum: 0
          maximum: 20
          description: |
            An integer between 0 and 20 specifying the number of most likely tokens
        
        user:
          type: string
          description: |
            A unique identifier representing your end-user
        
        seed:
          type: integer
          description: |
            This feature is in Beta. If specified, our system will make a best effort
        
        tools:
          type: array
          items:
            $ref: "#/components/schemas/ChatCompletionTool"
          maxItems: 128
          description: |
            A list of tools the model may call. Currently, only functions are supported
        
        tool_choice:
          oneOf:
            - type: string
              enum:
                - none
                - auto
                - required
            - $ref: "#/components/schemas/ChatCompletionNamedToolChoice"
          description: |
            Controls which (if any) tool is called by the model
        
        parallel_tool_calls:
          type: boolean
          default: true
          description: |
            Whether to enable parallel function calling during tool use
        
        response_format:
          oneOf:
            - $ref: "#/components/schemas/ResponseFormatText"
            - $ref: "#/components/schemas/ResponseFormatJsonObject"
            - $ref: "#/components/schemas/ResponseFormatJsonSchema"
          description: |
            An object specifying the format that the model must output

    ChatCompletionRequestMessage:
      oneOf:
        - $ref: "#/components/schemas/ChatCompletionRequestSystemMessage"
        - $ref: "#/components/schemas/ChatCompletionRequestUserMessage"
        - $ref: "#/components/schemas/ChatCompletionRequestAssistantMessage"
        - $ref: "#/components/schemas/ChatCompletionRequestToolMessage"

    ChatCompletionRequestSystemMessage:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          enum:
            - system
        content:
          oneOf:
            - type: string
            - type: array
              items:
                $ref: "#/components/schemas/ChatCompletionRequestMessageContentPart"
        name:
          type: string
          pattern: "^[a-zA-Z0-9_-]{1,64}$"

    ChatCompletionRequestUserMessage:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          enum:
            - user
        content:
          oneOf:
            - type: string
            - type: array
              items:
                $ref: "#/components/schemas/ChatCompletionRequestMessageContentPart"
        name:
          type: string
          pattern: "^[a-zA-Z0-9_-]{1,64}$"

    ChatCompletionRequestAssistantMessage:
      type: object
      required:
        - role
      properties:
        role:
          type: string
          enum:
            - assistant
        content:
          type: string
        name:
          type: string
          pattern: "^[a-zA-Z0-9_-]{1,64}$"
        tool_calls:
          type: array
          items:
            $ref: "#/components/schemas/ChatCompletionMessageToolCall"

    ChatCompletionRequestToolMessage:
      type: object
      required:
        - role
        - content
        - tool_call_id
      properties:
        role:
          type: string
          enum:
            - tool
        content:
          oneOf:
            - type: string
            - type: array
              items:
                $ref: "#/components/schemas/ChatCompletionRequestMessageContentPart"
        tool_call_id:
          type: string

    ChatCompletionRequestMessageContentPart:
      oneOf:
        - $ref: "#/components/schemas/ChatCompletionRequestMessageContentPartText"
        - $ref: "#/components/schemas/ChatCompletionRequestMessageContentPartImage"

    ChatCompletionRequestMessageContentPartText:
      type: object
      required:
        - type
        - text
      properties:
        type:
          type: string
          enum:
            - text
        text:
          type: string

    ChatCompletionRequestMessageContentPartImage:
      type: object
      required:
        - type
        - image_url
      properties:
        type:
          type: string
          enum:
            - image_url
        image_url:
          type: object
          required:
            - url
          properties:
            url:
              type: string
              format: uri
              pattern: "^(https?://.*|data:image/.*|attachment://.*|.*chatgpt\\.com/backend-api/.*)$"
              description: Either a URL of the image or the base64 encoded image data
            detail:
              type: string
              enum:
                - auto
                - low
                - high
              default: auto
              description: Specifies the detail level of the image

    ChatCompletionTool:
      type: object
      required:
        - type
        - function
      properties:
        type:
          type: string
          enum:
            - function
        function:
          $ref: "#/components/schemas/FunctionDefinition"

    FunctionDefinition:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the function to be called
        description:
          type: string
          description: A description of what the function does
        parameters:
          type: object
          description: The parameters the functions accepts, described as a JSON Schema object
        strict:
          type: boolean
          default: false
          description: Whether to enable strict schema adherence when generating the function call

    ChatCompletionNamedToolChoice:
      type: object
      required:
        - type
        - function
      properties:
        type:
          type: string
          enum:
            - function
        function:
          type: object
          required:
            - name
          properties:
            name:
              type: string
              description: The name of the function to call

    ChatCompletionMessageToolCall:
      type: object
      required:
        - id
        - type
        - function
      properties:
        id:
          type: string
          description: The ID of the tool call
        type:
          type: string
          enum:
            - function
        function:
          type: object
          required:
            - name
            - arguments
          properties:
            name:
              type: string
              description: The name of the function to call
            arguments:
              type: string
              description: The arguments to call the function with, as generated by the model

    ResponseFormatText:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - text

    ResponseFormatJsonObject:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - json_object

    ResponseFormatJsonSchema:
      type: object
      required:
        - type
        - json_schema
      properties:
        type:
          type: string
          enum:
            - json_schema
        json_schema:
          type: object
          required:
            - name
            - schema
          properties:
            name:
              type: string
              description: The name of the response format
            description:
              type: string
              description: A description of the response format
            schema:
              type: object
              description: The schema for the response format
            strict:
              type: boolean
              default: false
              description: Whether to enable strict schema adherence

    CreateChatCompletionResponse:
      type: object
      required:
        - id
        - object
        - created
        - model
        - choices
        - usage
      properties:
        id:
          type: string
          description: A unique identifier for the chat completion
        object:
          type: string
          enum:
            - chat.completion
        created:
          type: integer
          description: The Unix timestamp (in seconds) of when the chat completion was created
        model:
          type: string
          description: The model used for the chat completion
        choices:
          type: array
          items:
            $ref: "#/components/schemas/ChatCompletionChoice"
        usage:
          $ref: "#/components/schemas/CompletionUsage"
        system_fingerprint:
          type: string
          description: This fingerprint represents the backend configuration

    ChatCompletionChoice:
      type: object
      required:
        - index
        - message
        - finish_reason
      properties:
        index:
          type: integer
          description: The index of the choice in the list of choices
        message:
          $ref: "#/components/schemas/ChatCompletionResponseMessage"
        logprobs:
          type: object
          properties:
            content:
              type: array
              items:
                $ref: "#/components/schemas/ChatCompletionTokenLogprob"
        finish_reason:
          type: string
          enum:
            - stop
            - length
            - tool_calls
            - content_filter
          description: The reason the model stopped generating tokens

    ChatCompletionResponseMessage:
      type: object
      required:
        - role
      properties:
        role:
          type: string
          enum:
            - assistant
        content:
          type: string
        tool_calls:
          type: array
          items:
            $ref: "#/components/schemas/ChatCompletionMessageToolCall"

    ChatCompletionTokenLogprob:
      type: object
      required:
        - token
        - logprob
        - bytes
        - top_logprobs
      properties:
        token:
          type: string
          description: The token
        logprob:
          type: number
          description: The log probability of this token
        bytes:
          type: array
          items:
            type: integer
          description: A list of integers representing the UTF-8 bytes representation of the token
        top_logprobs:
          type: array
          items:
            type: object
            required:
              - token
              - logprob
              - bytes
            properties:
              token:
                type: string
              logprob:
                type: number
              bytes:
                type: array
                items:
                  type: integer

    CompletionUsage:
      type: object
      required:
        - prompt_tokens
        - completion_tokens
        - total_tokens
      properties:
        prompt_tokens:
          type: integer
          description: Number of tokens in the prompt
        completion_tokens:
          type: integer
          description: Number of tokens in the generated completion
        total_tokens:
          type: integer
          description: Total number of tokens used in the request
        completion_tokens_details:
          type: object
          properties:
            reasoning_tokens:
              type: integer
              description: Tokens used during reasoning (o3 model specific)